// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'klook';
const collection = 'activity';

// The current database to use.
use(database);

// Create a new collection.
// db.activities.drop();

db.activity.drop();
db.createCollection("activity", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["location_title", "deep_link", 
         "image_src", "have_video", "title","review_star",
          "review_hint", "market_price", 
          "sell_price", "start_time", "can_immediately",
            "city_id", "activity_id"],
         properties: {
                    location_title: {
                        bsonType: "string",
                        description: "must be a string and is required"
                        },
                    deep_link: {
                        bsonType: "string",
                        description: "must be a string and is required"
                        },
                    image_src: {
                        bsonType: "string",
                        description: "must be a string and is required"
                        },
                    have_video: {
                        bsonType: "bool",
                        description: "must be a string and is required"
                        },
                    title: {
                        bsonType: "string",
                        description: "must be a string and is required"
                        },
                    icon_info: {
                        bsonType: ["object","null"],
                        description: "must be a object"
                        },
                    review_star:{
                        bsonType: "double",
                        description: "must be a string and is required"
                        },
                    review_hint: {
                        bsonType: "string",
                        description: "must be a string and is required"
                        },
                        market_price:{
                            bsonType: ["object","null"],
                            properties:{
                                currency:{ bsonType:"string"},
                                symbol :{ bsonType:"string"},
                                amount_display :{ bsonType:"int"}
                            }
                        },
                        sell_price:{
                            bsonType: ["object","null"],
                            properties:{
                                currency:{ bsonType:"string"},
                                symbol:{ bsonType:"string"},
                                amount_display:{ bsonType:"int"}
                            }
                        },
                        from_price: {
                            bsonType:  ["object","null"],
                    
                        },
                        start_time:{
                        bsonType: "date",
                        description: "must be a string and is required"
                        },
                        can_immediately: {
                        bsonType: "bool",
                        description: "must be a string and is required"
                        },
                        city_id: {
                        bsonType: "int",
                        description: "must be a string and is required"
                        },
                        activity_id:{
                        bsonType: "int",
                        description: "must be a string and is required"
                        },
                        free_text:{
                        bsonType: "string",
                        description: "must be a string and is required"
                        },
                        what_we_love:{
                        bsonType: "string",
                        description: "must be a string and is required"
                        }
                    }
        
         }
         
      }
      , validationLevel: "moderate"
   }
   
)
db.activity_test.createIndex({activity_id:1},{unique:true});
// The prototype form to create a regular collection:
/* db.createCollection( <name>,
  {
    capped: <"bool"ean>,
    autoIndexId: <"bool"ean>,
    size: <number>,
    max: <number>,
    storageEngine: <document>,
    validator: <document>,
    validationLevel: <string>,
    validationAction: <string>,
    indexOptionDefaults: <document>,
    viewOn: <string>,
    pipeline: <pipeline>,
    collation: <document>,
    writeConcern: <document>
  }
) */

// The prototype form to create a time-series collection:
/* db.createCollection( <name>,
  {
    timeseries: {
      timeField: <string>,
      metaField: <string>,
      granularity: <string>
    },
    expireAfterSeconds: <number>
  }
) */
